== Wallmart Logistics

=== My solution and info's

I've solved the problem using a graph database called neo4j and a basic rails setup.

I`ve had a bunch of issues to get neo4j working properly in jruby and use it's djikstra implementation. But it seems to work smoothly now.

Also, there's no "standard" config for using and testing neo4j apps. (neo4j in ruby looks like a hack)

The solution I've used to clean the database was to rm -rf it's files. There is probably a better way to do it, but that's the solution after some googling I've found to be reliable. If I had more time to work on it, I would probably have come with a better solution.

I didn't cover corner cases like when the map name is missing or something. It's very straightforward and basic(and time consuming) to add validations like this to this test.

-----------

=== Installation instructions

- Install neo4j(brew install neo4j if you are in a mac)
- Install/use jruby 1.7.11
- Run bundle install inside this directory

And then... rails s

-----------

=== Docs/Tests

There is documentation in the project for the models and the controller test covers the example from the exercise.

=== Routes

==== POST '/maps'

params: name, logistic_net

==== Example:

curl -o -X "POST" -d "name=Hello&logistic_net[]=A B 10&logistic_net[]=B D 15&logistic_net[]=A C 20&logistic_net[]=C D 30&logistic_net[]=B E 50&logistic_net[]=D E 30" http://localhost:3000/maps

Response: 200

Body: empty

-----------

==== GET '/map/:map_name/path'

params: map_id(in url), from, to, fuel_consumption, gas_price

==== Example:

After the example of POST '/maps' run:

curl -X GET -d "from=A&to=D&fuel_consumption=10&gas_price=2.50" http://localhost:3000/maps/Hello/path.json

Response: 200

Body:
{
  cost: 6.25,
  path: ['A', 'B', 'D']
}

